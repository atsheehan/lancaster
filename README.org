* Lancaster

This is a Rust library for reading Avro files. It is currently in development.

** Functionality

The requirements were gathered from the [[https://avro.apache.org/docs/1.10.1/spec.html][1.10.1 specification]].

The initial focus will be reading an Avro container file using the writer's schema. We'll need to parse the schema and support deserialization of most types.

*** Parsing schema

- [X] Primitive types
- [X] Maps/arrays
- [X] Fixed/enums
- [X] Records
- [X] Unions
- [X] Self-referential types
- [X] Namespaces

*** Deserializing types

- [X] null
- [X] boolean
- [X] int
- [X] long
- [X] float
- [X] double
- [X] bytes
- [X] string
- [X] arrays
- [X] maps
- [X] fixed
- [X] enum
- [X] record
- [X] union

*** Reading an Avro container file

- [X] Reading header and metadata
- [X] Reading data blocks
- [ ] Deflate codec

** Remaining Functionality

- [ ] Reader's schema
- [ ] Encoding/decoding datums instead of datafiles
- [ ] Parsing canonical form for schemas
- [ ] Serializing datafiles

* Development

[[https://pre-commit.com/#1-install-pre-commit][Install pre-commit]] and run =pre-commit install= to [[https://pre-commit.com/#3-install-the-git-hook-scripts][configure the Git hooks]]. The commit hooks depend on [[https://github.com/rust-lang/rustfmt][rustfmt]] and [[https://github.com/rust-lang/rust-clippy][rust-clippy]] which can be installed with the following commands.

#+BEGIN_SRC shell
  rustup component add rustfmt
  rustup component add clippy
#+END_SRC

** Test Cases

The =script/generate_sample_files.groovy= helper uses the Java Avro library to generate some sample Avro files to validate our reader. New examples can be added to the script and re-run with

#+BEGIN_SRC shell
  groovy script/generate_sample_files.groovy
#+END_SRC
